import { Suspense, lazy } from "react";
import { useRoutes, Routes, Route } from "react-router-dom";
import Home from "./components/home";
import CursorEffect from "./components/CursorEffect";

// Conditionally load tempo routes
const getTempoRoutes = () => {
  if (import.meta.env.VITE_TEMPO === "true") {
    try {
      // @ts-ignore - tempo-routes is generated by tempo plugin
      const routes = import("tempo-routes");
      return routes;
    } catch {
      return null;
    }
  }
  return null;
};

function App() {
  const tempoRoutesModule = getTempoRoutes();
  const tempoRoutes = tempoRoutesModule ? useRoutes(tempoRoutesModule.default || []) : null;

  return (
    <Suspense fallback={<p>Loading...</p>}>
      <>
        <CursorEffect />
        <Routes>
          <Route path="/" element={<Home />} />
        </Routes>
        {tempoRoutes}
      </>
    </Suspense>
  );
}

export default App;